/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        // code here
        queue<pair<Node*, int>> q;
        map<int,int> mpp;
        vector<int> ans;
        
        q.push({root, 0});
        
        while(!q.empty()){
             Node* first = q.front().first;
             int second = q.front().second;
             q.pop();
            
            if(mpp.find(second) == mpp.end()){
                mpp[second] = first-> data;
            }
            
            if(first -> left != NULL){
                q.push({ first -> left, second - 1});
            } 
            if(first -> right != NULL){
                
                q.push({first -> right, second + 1});
            }
            
        }
        
        for(auto [a,b] : mpp){
            ans.push_back(b);
        }
       
       return ans;
        
        
    }
};
