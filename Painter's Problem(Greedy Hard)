class Solution {
public:
     
      bool isvalid(vector<int>& nums, int n, int k, int map){
        int st =1;
        int pg =0;
        for(int i = 0; i< n; i++){
            if(nums[i] > map) return false;
            if(pg + nums[i] <= map){
                pg += nums[i];
            }
            else{
                st++;
                pg = nums[i];
            }
        }
        if(st >k) return false;
        else return true;
      }
    int splitArray(vector<int>& nums, int k) {
        int n = nums.size();
        if(k> n) return -1;
        int sum = 0;
        for(int i = 0; i< n; i++){
            sum += nums[i];
        }
        int ans  = 0;
        int start = 0;
        int end = sum;
        while(start <= end){
            int mid = start +(end -start)/2;
            if(isvalid(nums, n, k, mid)){
                ans = mid;
                end  = mid-1;
            }
            else{
                start = mid+1;
            }
        }

        return ans;

        
    }
};
