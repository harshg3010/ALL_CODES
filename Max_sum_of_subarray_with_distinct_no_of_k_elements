class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_map<int,int> mpp;
        int j = 0;
        long long  sum =  0;
        long long maxi  = 0;
        for(int i = 0; i< nums.size(); i++){
            sum += nums[i];
            mpp[nums[i]]++;

// if map size exceeds k then shrinks the window 

            while(i- j +1  > k){
                sum -= nums[j];
                mpp[nums[j]]--;
                if(mpp[nums[j]] == 0) mpp.erase(nums[j]);
                j++;
            }
            if(mpp.size() == k){
                maxi = max(maxi, sum);
            }
        }

        return maxi;
    }
};
